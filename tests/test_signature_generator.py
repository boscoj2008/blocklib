import unittest
from blocklib import generate_signature

class TestPSig(unittest.TestCase):

    def test_feature_value(self):
        """Test signatures generated by feature-value."""
        attr_ind = [0, 1]
        dtuple = ('Joyce', 'Wang', 2134)
        signature_strategy = 'feature-value'
        signatures = generate_signature(signature_strategy, attr_ind, dtuple, {})
        assert signatures == set(['JoyceWang'])

    def test_n_gram(self):
        """Test signatures generated by n-gram."""
        attr_ind = [0, 1]
        dtuple = ('Joyce', 'Wang', 2134)

        # test 2-gram
        signature_strategy = 'n-gram'
        signature_strategy_config = {'n': 2}
        signatures = generate_signature(signature_strategy, attr_ind, dtuple,
                                        signature_strategy_config)
        assert signatures == set(['Jo', 'oy', 'yc', 'ce', 'eW', 'Wa', 'an', 'ng'])

        # test 3-gram
        signature_strategy_config = {'n': 3}
        signatures = generate_signature(signature_strategy, attr_ind, dtuple,
                                        signature_strategy_config)
        assert signatures == set(['Joy', 'oyc', 'yce', 'ceW', 'eWa', 'Wan',
                                  'ang'])
